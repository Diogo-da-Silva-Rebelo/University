-- | Este módulo define funções comuns da Tarefa 5 do trabalho prático.
module Main where

import LI11920
import Graphics.Gloss
import Graphics.Gloss.Juicy
import Graphics.Gloss.Interface.Pure.Game
import Graphics.Gloss.Data.Bitmap


type EstadoGloss = (Float,Float,[Picture])

-- | Função principal da Tarefa 5.
--
-- __NB:__ Esta Tarefa é completamente livre. Deve utilizar a biblioteca <http://hackage.haskell.org/package/gloss gloss> para animar o jogo, e reutilizar __de forma completa__ as funções das tarefas anteriores.
estadoInicial :: [Picture] -> EstadoGloss
estadoInicial z = (0,0,z)

desenhaEstado :: EstadoGloss -> Picture
desenhaEstado (x,y,[principal,z]) = Pictures [principal,Translate x y z]


reageEvento :: Event -> EstadoGloss -> EstadoGloss
reageEvento (EventKey (SpecialKey KeyUp)    Down _ _) (x,y,p) = (x,y+10,p)
reageEvento (EventKey (SpecialKey KeyDown)  Down _ _) (x,y,p) = (x,y-10,p)
reageEvento (EventKey (SpecialKey KeyLeft)  Down _ _) (x,y,p) = (x-10,y,p)
reageEvento (EventKey (SpecialKey KeyRight) Down _ _) (x,y,p) = (x+10,y,p)
reageEvento _ e = e

reageTempo :: Float -> EstadoGloss -> EstadoGloss
reageTempo n (x,y,z) = (x+1,y,z)

fr :: Int
fr = 50

dm :: Display
dm = FullScreen

main :: IO ()
main = do Just principal <- loadJuicy "imagens/PSP.jpeg"
          Just z <- loadJuicy "imagens/Bola.jpg"
          play dm         -- janela onde irá correr o jogo
               (greyN 0.5)    -- côr do fundo da janela
               fr              -- frame rate
               (estadoInicial [principal,(scale 0.15 0.15 z)])   -- estado inicial
               desenhaEstado   -- desenha o estado do jogo
               reageEvento     -- reage a um evento
               reageTempo      -- reage ao passar do tempo